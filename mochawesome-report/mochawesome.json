{
  "stats": {
    "suites": 2,
    "tests": 19,
    "passes": 15,
    "pending": 0,
    "failures": 4,
    "start": "2025-05-23T09:16:24.399Z",
    "end": "2025-05-23T09:17:00.524Z",
    "duration": 36125,
    "testsRegistered": 19,
    "passPercent": 78.94736842105263,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "8465acf1-b2c5-44ce-964a-df4bb72c42ae",
      "title": "",
      "fullFile": "",
      "file": "",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "51724281-6505-4ef3-bf44-cb78f1014dfa",
          "title": "this are login tests",
          "fullFile": "C:\\Users\\bereket\\Documents\\project repositories\\testing-frontend\\src\\tests\\auth.test.js",
          "file": "\\src\\tests\\auth.test.js",
          "beforeHooks": [
            {
              "title": "\"before all\" hook in \"this are login tests\"",
              "fullTitle": "this are login tests \"before all\" hook in \"this are login tests\"",
              "timedOut": false,
              "duration": 1755,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "driver = await new Builder().forBrowser(Browser.CHROME).build();",
              "err": {},
              "uuid": "067c28c9-eb1f-478c-81e4-71d4ac4e4bab",
              "parentUUID": "51724281-6505-4ef3-bf44-cb78f1014dfa",
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [],
          "tests": [
            {
              "title": "correct loggin",
              "fullTitle": "this are login tests correct loggin",
              "timedOut": false,
              "duration": 2503,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "//navigate to login page\nawait driver.get(\"http://localhost:5173/login\");\n//find enteries in the ui\nconst email = driver.findElement(By.name(\"email\"));\nconst password = driver.findElement(By.name(\"password\"));\nconst send_btn = driver.findElement(By.id(\"submit-button\"));\n//insert data to the respective enteries if available\nemail && (await email.sendKeys(data.email));\npassword && (await password.sendKeys(data.password));\n//login\nawait send_btn.click();\nif (expectation === \"login\") {\n  const heading = await driver.wait(\n    until.elementLocated(By.name(\"heading\")),\n    1000\n  );\n  assert.ok(heading);\n  const logout_btn = await driver.wait(\n    until.elementLocated(By.name(\"logout\")),\n    1000\n  );\n  await logout_btn.click();\n} else if (expectation === \"error message\") {\n  const error = await driver.wait(\n    until.elementLocated(\n      By.xpath(`//div[contains(text(),'${error_message}')]`)\n    ),\n    1000\n  );\n  assert.ok(error);\n}",
              "err": {},
              "uuid": "11d5037b-12bf-44bd-9bd1-bc04a1a56a84",
              "parentUUID": "51724281-6505-4ef3-bf44-cb78f1014dfa",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "handeled incorrect email",
              "fullTitle": "this are login tests handeled incorrect email",
              "timedOut": false,
              "duration": 1505,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "//navigate to login page\nawait driver.get(\"http://localhost:5173/login\");\n//find enteries in the ui\nconst email = driver.findElement(By.name(\"email\"));\nconst password = driver.findElement(By.name(\"password\"));\nconst send_btn = driver.findElement(By.id(\"submit-button\"));\n//insert data to the respective enteries if available\nemail && (await email.sendKeys(data.email));\npassword && (await password.sendKeys(data.password));\n//login\nawait send_btn.click();\nif (expectation === \"login\") {\n  const heading = await driver.wait(\n    until.elementLocated(By.name(\"heading\")),\n    1000\n  );\n  assert.ok(heading);\n  const logout_btn = await driver.wait(\n    until.elementLocated(By.name(\"logout\")),\n    1000\n  );\n  await logout_btn.click();\n} else if (expectation === \"error message\") {\n  const error = await driver.wait(\n    until.elementLocated(\n      By.xpath(`//div[contains(text(),'${error_message}')]`)\n    ),\n    1000\n  );\n  assert.ok(error);\n}",
              "err": {},
              "uuid": "347fdaac-4328-44b4-8d7f-316293adddc5",
              "parentUUID": "51724281-6505-4ef3-bf44-cb78f1014dfa",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "handeled incorrect password",
              "fullTitle": "this are login tests handeled incorrect password",
              "timedOut": false,
              "duration": 1980,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "//navigate to login page\nawait driver.get(\"http://localhost:5173/login\");\n//find enteries in the ui\nconst email = driver.findElement(By.name(\"email\"));\nconst password = driver.findElement(By.name(\"password\"));\nconst send_btn = driver.findElement(By.id(\"submit-button\"));\n//insert data to the respective enteries if available\nemail && (await email.sendKeys(data.email));\npassword && (await password.sendKeys(data.password));\n//login\nawait send_btn.click();\nif (expectation === \"login\") {\n  const heading = await driver.wait(\n    until.elementLocated(By.name(\"heading\")),\n    1000\n  );\n  assert.ok(heading);\n  const logout_btn = await driver.wait(\n    until.elementLocated(By.name(\"logout\")),\n    1000\n  );\n  await logout_btn.click();\n} else if (expectation === \"error message\") {\n  const error = await driver.wait(\n    until.elementLocated(\n      By.xpath(`//div[contains(text(),'${error_message}')]`)\n    ),\n    1000\n  );\n  assert.ok(error);\n}",
              "err": {},
              "uuid": "d9fb513c-7a59-4814-a63e-7cc11db67375",
              "parentUUID": "51724281-6505-4ef3-bf44-cb78f1014dfa",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "handeled incorrect password and email",
              "fullTitle": "this are login tests handeled incorrect password and email",
              "timedOut": false,
              "duration": 1296,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "//navigate to login page\nawait driver.get(\"http://localhost:5173/login\");\n//find enteries in the ui\nconst email = driver.findElement(By.name(\"email\"));\nconst password = driver.findElement(By.name(\"password\"));\nconst send_btn = driver.findElement(By.id(\"submit-button\"));\n//insert data to the respective enteries if available\nemail && (await email.sendKeys(data.email));\npassword && (await password.sendKeys(data.password));\n//login\nawait send_btn.click();\nif (expectation === \"login\") {\n  const heading = await driver.wait(\n    until.elementLocated(By.name(\"heading\")),\n    1000\n  );\n  assert.ok(heading);\n  const logout_btn = await driver.wait(\n    until.elementLocated(By.name(\"logout\")),\n    1000\n  );\n  await logout_btn.click();\n} else if (expectation === \"error message\") {\n  const error = await driver.wait(\n    until.elementLocated(\n      By.xpath(`//div[contains(text(),'${error_message}')]`)\n    ),\n    1000\n  );\n  assert.ok(error);\n}",
              "err": {},
              "uuid": "27462fbb-d932-4667-ae6b-dbd87751d99a",
              "parentUUID": "51724281-6505-4ef3-bf44-cb78f1014dfa",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "handeled missing password",
              "fullTitle": "this are login tests handeled missing password",
              "timedOut": false,
              "duration": 1567,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "//navigate to login page\nawait driver.get(\"http://localhost:5173/login\");\n//find enteries in the ui\nconst email = driver.findElement(By.name(\"email\"));\nconst password = driver.findElement(By.name(\"password\"));\nconst send_btn = driver.findElement(By.id(\"submit-button\"));\n//insert data to the respective enteries if available\nemail && (await email.sendKeys(data.email));\npassword && (await password.sendKeys(data.password));\n//login\nawait send_btn.click();\nif (expectation === \"login\") {\n  const heading = await driver.wait(\n    until.elementLocated(By.name(\"heading\")),\n    1000\n  );\n  assert.ok(heading);\n  const logout_btn = await driver.wait(\n    until.elementLocated(By.name(\"logout\")),\n    1000\n  );\n  await logout_btn.click();\n} else if (expectation === \"error message\") {\n  const error = await driver.wait(\n    until.elementLocated(\n      By.xpath(`//div[contains(text(),'${error_message}')]`)\n    ),\n    1000\n  );\n  assert.ok(error);\n}",
              "err": {},
              "uuid": "3e4d175d-dfbd-4b61-8abc-689c981f6e25",
              "parentUUID": "51724281-6505-4ef3-bf44-cb78f1014dfa",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "handeled missing email",
              "fullTitle": "this are login tests handeled missing email",
              "timedOut": false,
              "duration": 1372,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "//navigate to login page\nawait driver.get(\"http://localhost:5173/login\");\n//find enteries in the ui\nconst email = driver.findElement(By.name(\"email\"));\nconst password = driver.findElement(By.name(\"password\"));\nconst send_btn = driver.findElement(By.id(\"submit-button\"));\n//insert data to the respective enteries if available\nemail && (await email.sendKeys(data.email));\npassword && (await password.sendKeys(data.password));\n//login\nawait send_btn.click();\nif (expectation === \"login\") {\n  const heading = await driver.wait(\n    until.elementLocated(By.name(\"heading\")),\n    1000\n  );\n  assert.ok(heading);\n  const logout_btn = await driver.wait(\n    until.elementLocated(By.name(\"logout\")),\n    1000\n  );\n  await logout_btn.click();\n} else if (expectation === \"error message\") {\n  const error = await driver.wait(\n    until.elementLocated(\n      By.xpath(`//div[contains(text(),'${error_message}')]`)\n    ),\n    1000\n  );\n  assert.ok(error);\n}",
              "err": {},
              "uuid": "e12b1f54-321c-43d3-be1d-805352000e3d",
              "parentUUID": "51724281-6505-4ef3-bf44-cb78f1014dfa",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "short password",
              "fullTitle": "this are login tests short password",
              "timedOut": false,
              "duration": 1563,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "//navigate to login page\nawait driver.get(\"http://localhost:5173/login\");\n//find enteries in the ui\nconst email = driver.findElement(By.name(\"email\"));\nconst password = driver.findElement(By.name(\"password\"));\nconst send_btn = driver.findElement(By.id(\"submit-button\"));\n//insert data to the respective enteries if available\nemail && (await email.sendKeys(data.email));\npassword && (await password.sendKeys(data.password));\n//login\nawait send_btn.click();\nif (expectation === \"login\") {\n  const heading = await driver.wait(\n    until.elementLocated(By.name(\"heading\")),\n    1000\n  );\n  assert.ok(heading);\n  const logout_btn = await driver.wait(\n    until.elementLocated(By.name(\"logout\")),\n    1000\n  );\n  await logout_btn.click();\n} else if (expectation === \"error message\") {\n  const error = await driver.wait(\n    until.elementLocated(\n      By.xpath(`//div[contains(text(),'${error_message}')]`)\n    ),\n    1000\n  );\n  assert.ok(error);\n}",
              "err": {},
              "uuid": "db808333-52b3-4ac5-97b0-e14b2835414a",
              "parentUUID": "51724281-6505-4ef3-bf44-cb78f1014dfa",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "checks whethere the account the user logged in to is the users account",
              "fullTitle": "this are login tests checks whethere the account the user logged in to is the users account",
              "timedOut": false,
              "duration": 3023,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "//navigate to login\nawait driver.get(\"http://localhost:5173/login\");\n//loggin\nconst useremail=\"bereket@gmail.com\"\nconst userpassword=\"b123456789\"\n//find enteries in the ui\nconst email = driver.findElement(By.name(\"email\"));\nconst password = driver.findElement(By.name(\"password\"));\nconst send_btn = driver.findElement(By.id(\"submit-button\"));\n//insert data to the respective enteries if available\nemail && (await email.sendKeys(useremail));\npassword && (await password.sendKeys(userpassword));\n//login\nawait send_btn.click();\n//navigate to profile\nconst profile_link = await driver.wait(\n  until.elementLocated(By.name(\"profile\")),\n  1000\n);\nawait profile_link.click();\n//validate that the email the user used to login is the same as the email in the profile\nconst profile_email = driver.wait(\n  until.elementLocated(By.name(\"email\")),\n  1000\n);\nassert.strictEqual(useremail, await profile_email.getText());\nconst logout_btn = await driver.wait(\n  until.elementLocated(By.name(\"logout\")),\n  1000\n);\nawait logout_btn.click();",
              "err": {},
              "uuid": "a6ec6a88-426c-435b-b0e2-15d37983c5b6",
              "parentUUID": "51724281-6505-4ef3-bf44-cb78f1014dfa",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "11d5037b-12bf-44bd-9bd1-bc04a1a56a84",
            "347fdaac-4328-44b4-8d7f-316293adddc5",
            "d9fb513c-7a59-4814-a63e-7cc11db67375",
            "27462fbb-d932-4667-ae6b-dbd87751d99a",
            "3e4d175d-dfbd-4b61-8abc-689c981f6e25",
            "e12b1f54-321c-43d3-be1d-805352000e3d",
            "db808333-52b3-4ac5-97b0-e14b2835414a",
            "a6ec6a88-426c-435b-b0e2-15d37983c5b6"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 14809,
          "root": false,
          "rootEmpty": false,
          "_timeout": 0
        },
        {
          "uuid": "395551de-8443-4ebe-a85b-274e6dc7bd1b",
          "title": "this are tests for sign in",
          "fullFile": "C:\\Users\\bereket\\Documents\\project repositories\\testing-frontend\\src\\tests\\auth.test.js",
          "file": "\\src\\tests\\auth.test.js",
          "beforeHooks": [],
          "afterHooks": [
            {
              "title": "\"after all\" hook in \"this are tests for sign in\"",
              "fullTitle": "this are tests for sign in \"after all\" hook in \"this are tests for sign in\"",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "driver.quit();",
              "err": {},
              "uuid": "4d066489-c7c4-4846-bbee-54afd8f5a2b4",
              "parentUUID": "395551de-8443-4ebe-a85b-274e6dc7bd1b",
              "isHook": true,
              "skipped": false
            }
          ],
          "tests": [
            {
              "title": "missing password",
              "fullTitle": "this are tests for sign in missing password",
              "timedOut": false,
              "duration": 1865,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "//navigate to signin page\nawait driver.get(\"http://localhost:5173/signup\");\n//find enteries in the ui\nconst fullname = driver.findElement(By.name(\"fullName\"));\nconst email = driver.findElement(By.name(\"email\"));\nconst password = driver.findElement(By.name(\"password\"));\nconst send_btn = driver.findElement(By.id(\"submit-button\"));\n//insert data to the respective enteries if available\nfullname && (await fullname.sendKeys(data.fullname));\nemail && (await email.sendKeys(data.email));\npassword && (await password.sendKeys(data.password));\n//sign in\nsend_btn.click();\nif (expectation === \"sign in\") {\n  const heading = await driver.wait(\n    until.elementLocated(By.name(\"heading\")),\n    2000\n  );\n  assert.ok(heading);\n  const logout_btn = await driver.wait(\n    until.elementLocated(By.name(\"logout\")),\n    1000\n  );\n  await logout_btn.click();\n} else if (expectation === \"error message\") {\n  const error = await driver.wait(\n    until.elementLocated(\n      By.xpath(`//div[contains(text(),'${error_message}')]`)\n    ),\n    1000\n  );\n  assert.ok(error);\n}",
              "err": {},
              "uuid": "db10e6ca-8610-4fd6-8bb6-c180343e2dcd",
              "parentUUID": "395551de-8443-4ebe-a85b-274e6dc7bd1b",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "missing email",
              "fullTitle": "this are tests for sign in missing email",
              "timedOut": false,
              "duration": 1706,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "//navigate to signin page\nawait driver.get(\"http://localhost:5173/signup\");\n//find enteries in the ui\nconst fullname = driver.findElement(By.name(\"fullName\"));\nconst email = driver.findElement(By.name(\"email\"));\nconst password = driver.findElement(By.name(\"password\"));\nconst send_btn = driver.findElement(By.id(\"submit-button\"));\n//insert data to the respective enteries if available\nfullname && (await fullname.sendKeys(data.fullname));\nemail && (await email.sendKeys(data.email));\npassword && (await password.sendKeys(data.password));\n//sign in\nsend_btn.click();\nif (expectation === \"sign in\") {\n  const heading = await driver.wait(\n    until.elementLocated(By.name(\"heading\")),\n    2000\n  );\n  assert.ok(heading);\n  const logout_btn = await driver.wait(\n    until.elementLocated(By.name(\"logout\")),\n    1000\n  );\n  await logout_btn.click();\n} else if (expectation === \"error message\") {\n  const error = await driver.wait(\n    until.elementLocated(\n      By.xpath(`//div[contains(text(),'${error_message}')]`)\n    ),\n    1000\n  );\n  assert.ok(error);\n}",
              "err": {},
              "uuid": "08a8598d-a63f-4899-953e-7cbab71ad1ae",
              "parentUUID": "395551de-8443-4ebe-a85b-274e6dc7bd1b",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "missing fullname",
              "fullTitle": "this are tests for sign in missing fullname",
              "timedOut": false,
              "duration": 1755,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "//navigate to signin page\nawait driver.get(\"http://localhost:5173/signup\");\n//find enteries in the ui\nconst fullname = driver.findElement(By.name(\"fullName\"));\nconst email = driver.findElement(By.name(\"email\"));\nconst password = driver.findElement(By.name(\"password\"));\nconst send_btn = driver.findElement(By.id(\"submit-button\"));\n//insert data to the respective enteries if available\nfullname && (await fullname.sendKeys(data.fullname));\nemail && (await email.sendKeys(data.email));\npassword && (await password.sendKeys(data.password));\n//sign in\nsend_btn.click();\nif (expectation === \"sign in\") {\n  const heading = await driver.wait(\n    until.elementLocated(By.name(\"heading\")),\n    2000\n  );\n  assert.ok(heading);\n  const logout_btn = await driver.wait(\n    until.elementLocated(By.name(\"logout\")),\n    1000\n  );\n  await logout_btn.click();\n} else if (expectation === \"error message\") {\n  const error = await driver.wait(\n    until.elementLocated(\n      By.xpath(`//div[contains(text(),'${error_message}')]`)\n    ),\n    1000\n  );\n  assert.ok(error);\n}",
              "err": {},
              "uuid": "0c4ba14a-48de-402f-8144-eafab17c3a4d",
              "parentUUID": "395551de-8443-4ebe-a85b-274e6dc7bd1b",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "missing everything",
              "fullTitle": "this are tests for sign in missing everything",
              "timedOut": false,
              "duration": 1852,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "//navigate to signin page\nawait driver.get(\"http://localhost:5173/signup\");\n//find enteries in the ui\nconst fullname = driver.findElement(By.name(\"fullName\"));\nconst email = driver.findElement(By.name(\"email\"));\nconst password = driver.findElement(By.name(\"password\"));\nconst send_btn = driver.findElement(By.id(\"submit-button\"));\n//insert data to the respective enteries if available\nfullname && (await fullname.sendKeys(data.fullname));\nemail && (await email.sendKeys(data.email));\npassword && (await password.sendKeys(data.password));\n//sign in\nsend_btn.click();\nif (expectation === \"sign in\") {\n  const heading = await driver.wait(\n    until.elementLocated(By.name(\"heading\")),\n    2000\n  );\n  assert.ok(heading);\n  const logout_btn = await driver.wait(\n    until.elementLocated(By.name(\"logout\")),\n    1000\n  );\n  await logout_btn.click();\n} else if (expectation === \"error message\") {\n  const error = await driver.wait(\n    until.elementLocated(\n      By.xpath(`//div[contains(text(),'${error_message}')]`)\n    ),\n    1000\n  );\n  assert.ok(error);\n}",
              "err": {},
              "uuid": "4f9b757f-d1d8-410c-83c8-6f8498ab01bb",
              "parentUUID": "395551de-8443-4ebe-a85b-274e6dc7bd1b",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "missing fullname and password",
              "fullTitle": "this are tests for sign in missing fullname and password",
              "timedOut": false,
              "duration": 1677,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "//navigate to signin page\nawait driver.get(\"http://localhost:5173/signup\");\n//find enteries in the ui\nconst fullname = driver.findElement(By.name(\"fullName\"));\nconst email = driver.findElement(By.name(\"email\"));\nconst password = driver.findElement(By.name(\"password\"));\nconst send_btn = driver.findElement(By.id(\"submit-button\"));\n//insert data to the respective enteries if available\nfullname && (await fullname.sendKeys(data.fullname));\nemail && (await email.sendKeys(data.email));\npassword && (await password.sendKeys(data.password));\n//sign in\nsend_btn.click();\nif (expectation === \"sign in\") {\n  const heading = await driver.wait(\n    until.elementLocated(By.name(\"heading\")),\n    2000\n  );\n  assert.ok(heading);\n  const logout_btn = await driver.wait(\n    until.elementLocated(By.name(\"logout\")),\n    1000\n  );\n  await logout_btn.click();\n} else if (expectation === \"error message\") {\n  const error = await driver.wait(\n    until.elementLocated(\n      By.xpath(`//div[contains(text(),'${error_message}')]`)\n    ),\n    1000\n  );\n  assert.ok(error);\n}",
              "err": {},
              "uuid": "75fada55-5de6-41c1-9c22-847c812d4136",
              "parentUUID": "395551de-8443-4ebe-a85b-274e6dc7bd1b",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "missing fullname and email",
              "fullTitle": "this are tests for sign in missing fullname and email",
              "timedOut": false,
              "duration": 980,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "//navigate to signin page\nawait driver.get(\"http://localhost:5173/signup\");\n//find enteries in the ui\nconst fullname = driver.findElement(By.name(\"fullName\"));\nconst email = driver.findElement(By.name(\"email\"));\nconst password = driver.findElement(By.name(\"password\"));\nconst send_btn = driver.findElement(By.id(\"submit-button\"));\n//insert data to the respective enteries if available\nfullname && (await fullname.sendKeys(data.fullname));\nemail && (await email.sendKeys(data.email));\npassword && (await password.sendKeys(data.password));\n//sign in\nsend_btn.click();\nif (expectation === \"sign in\") {\n  const heading = await driver.wait(\n    until.elementLocated(By.name(\"heading\")),\n    2000\n  );\n  assert.ok(heading);\n  const logout_btn = await driver.wait(\n    until.elementLocated(By.name(\"logout\")),\n    1000\n  );\n  await logout_btn.click();\n} else if (expectation === \"error message\") {\n  const error = await driver.wait(\n    until.elementLocated(\n      By.xpath(`//div[contains(text(),'${error_message}')]`)\n    ),\n    1000\n  );\n  assert.ok(error);\n}",
              "err": {},
              "uuid": "ce97aba7-0f81-4f50-8d4b-228bcf4aadbd",
              "parentUUID": "395551de-8443-4ebe-a85b-274e6dc7bd1b",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "short password",
              "fullTitle": "this are tests for sign in short password",
              "timedOut": false,
              "duration": 1133,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "//navigate to signin page\nawait driver.get(\"http://localhost:5173/signup\");\n//find enteries in the ui\nconst fullname = driver.findElement(By.name(\"fullName\"));\nconst email = driver.findElement(By.name(\"email\"));\nconst password = driver.findElement(By.name(\"password\"));\nconst send_btn = driver.findElement(By.id(\"submit-button\"));\n//insert data to the respective enteries if available\nfullname && (await fullname.sendKeys(data.fullname));\nemail && (await email.sendKeys(data.email));\npassword && (await password.sendKeys(data.password));\n//sign in\nsend_btn.click();\nif (expectation === \"sign in\") {\n  const heading = await driver.wait(\n    until.elementLocated(By.name(\"heading\")),\n    2000\n  );\n  assert.ok(heading);\n  const logout_btn = await driver.wait(\n    until.elementLocated(By.name(\"logout\")),\n    1000\n  );\n  await logout_btn.click();\n} else if (expectation === \"error message\") {\n  const error = await driver.wait(\n    until.elementLocated(\n      By.xpath(`//div[contains(text(),'${error_message}')]`)\n    ),\n    1000\n  );\n  assert.ok(error);\n}",
              "err": {},
              "uuid": "9ff2b073-520b-49de-8f28-20c1f2cee5ab",
              "parentUUID": "395551de-8443-4ebe-a85b-274e6dc7bd1b",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "correct sign in",
              "fullTitle": "this are tests for sign in correct sign in",
              "timedOut": false,
              "duration": 3469,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "//navigate to signin page\nawait driver.get(\"http://localhost:5173/signup\");\n//find enteries in the ui\nconst fullname = driver.findElement(By.name(\"fullName\"));\nconst email = driver.findElement(By.name(\"email\"));\nconst password = driver.findElement(By.name(\"password\"));\nconst send_btn = driver.findElement(By.id(\"submit-button\"));\n//insert data to the respective enteries if available\nfullname && (await fullname.sendKeys(data.fullname));\nemail && (await email.sendKeys(data.email));\npassword && (await password.sendKeys(data.password));\n//sign in\nsend_btn.click();\nif (expectation === \"sign in\") {\n  const heading = await driver.wait(\n    until.elementLocated(By.name(\"heading\")),\n    2000\n  );\n  assert.ok(heading);\n  const logout_btn = await driver.wait(\n    until.elementLocated(By.name(\"logout\")),\n    1000\n  );\n  await logout_btn.click();\n} else if (expectation === \"error message\") {\n  const error = await driver.wait(\n    until.elementLocated(\n      By.xpath(`//div[contains(text(),'${error_message}')]`)\n    ),\n    1000\n  );\n  assert.ok(error);\n}",
              "err": {
                "message": "TimeoutError: Waiting for element to be located By(css selector, *[name=\"heading\"])\nWait timed out after 2121ms",
                "estack": "TimeoutError: Waiting for element to be located By(css selector, *[name=\"heading\"])\nWait timed out after 2121ms\n    at C:\\Users\\bereket\\Documents\\project repositories\\testing-frontend\\node_modules\\selenium-webdriver\\lib\\webdriver.js:929:22\n    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)",
                "diff": null
              },
              "uuid": "46ff5c95-5573-436d-b105-014814e93fcd",
              "parentUUID": "395551de-8443-4ebe-a85b-274e6dc7bd1b",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "using already regestered email",
              "fullTitle": "this are tests for sign in using already regestered email",
              "timedOut": false,
              "duration": 1876,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "//navigate to signin page\nawait driver.get(\"http://localhost:5173/signup\");\n//find enteries in the ui\nconst fullname = driver.findElement(By.name(\"fullName\"));\nconst email = driver.findElement(By.name(\"email\"));\nconst password = driver.findElement(By.name(\"password\"));\nconst send_btn = driver.findElement(By.id(\"submit-button\"));\n//insert data to the respective enteries if available\nfullname && (await fullname.sendKeys(data.fullname));\nemail && (await email.sendKeys(data.email));\npassword && (await password.sendKeys(data.password));\n//sign in\nsend_btn.click();\nif (expectation === \"sign in\") {\n  const heading = await driver.wait(\n    until.elementLocated(By.name(\"heading\")),\n    2000\n  );\n  assert.ok(heading);\n  const logout_btn = await driver.wait(\n    until.elementLocated(By.name(\"logout\")),\n    1000\n  );\n  await logout_btn.click();\n} else if (expectation === \"error message\") {\n  const error = await driver.wait(\n    until.elementLocated(\n      By.xpath(`//div[contains(text(),'${error_message}')]`)\n    ),\n    1000\n  );\n  assert.ok(error);\n}",
              "err": {
                "message": "TimeoutError: Waiting for element to be located By(xpath, //div[contains(text(),'Email already exists')])\nWait timed out after 1007ms",
                "estack": "TimeoutError: Waiting for element to be located By(xpath, //div[contains(text(),'Email already exists')])\nWait timed out after 1007ms\n    at C:\\Users\\bereket\\Documents\\project repositories\\testing-frontend\\node_modules\\selenium-webdriver\\lib\\webdriver.js:929:22\n    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)",
                "diff": null
              },
              "uuid": "25206377-1162-4eb5-b311-5fc29332809b",
              "parentUUID": "395551de-8443-4ebe-a85b-274e6dc7bd1b",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "using already regestered name",
              "fullTitle": "this are tests for sign in using already regestered name",
              "timedOut": false,
              "duration": 914,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "//navigate to signin page\nawait driver.get(\"http://localhost:5173/signup\");\n//find enteries in the ui\nconst fullname = driver.findElement(By.name(\"fullName\"));\nconst email = driver.findElement(By.name(\"email\"));\nconst password = driver.findElement(By.name(\"password\"));\nconst send_btn = driver.findElement(By.id(\"submit-button\"));\n//insert data to the respective enteries if available\nfullname && (await fullname.sendKeys(data.fullname));\nemail && (await email.sendKeys(data.email));\npassword && (await password.sendKeys(data.password));\n//sign in\nsend_btn.click();\nif (expectation === \"sign in\") {\n  const heading = await driver.wait(\n    until.elementLocated(By.name(\"heading\")),\n    2000\n  );\n  assert.ok(heading);\n  const logout_btn = await driver.wait(\n    until.elementLocated(By.name(\"logout\")),\n    1000\n  );\n  await logout_btn.click();\n} else if (expectation === \"error message\") {\n  const error = await driver.wait(\n    until.elementLocated(\n      By.xpath(`//div[contains(text(),'${error_message}')]`)\n    ),\n    1000\n  );\n  assert.ok(error);\n}",
              "err": {
                "message": "InvalidSelectorError: invalid selector: Unable to locate an element with the xpath expression //div[contains(text(),'user's name already exists')] because of the following error:\nSyntaxError: Failed to execute 'evaluate' on 'Document': The string '//div[contains(text(),'user's name already exists')]' is not a valid XPath expression.\n  (Session info: chrome=136.0.7103.114)",
                "estack": "InvalidSelectorError: invalid selector: Unable to locate an element with the xpath expression //div[contains(text(),'user's name already exists')] because of the following error:\nSyntaxError: Failed to execute 'evaluate' on 'Document': The string '//div[contains(text(),'user's name already exists')]' is not a valid XPath expression.\n  (Session info: chrome=136.0.7103.114)\n    at Object.throwDecodedError (node_modules\\selenium-webdriver\\lib\\error.js:523:15)\n    at parseHttpResponse (node_modules\\selenium-webdriver\\lib\\http.js:524:13)\n    at Executor.execute (node_modules\\selenium-webdriver\\lib\\http.js:456:28)\n    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)\n    at async Driver.execute (node_modules\\selenium-webdriver\\lib\\webdriver.js:745:17)\n    at async Driver.findElements (node_modules\\selenium-webdriver\\lib\\webdriver.js:1073:17)",
                "diff": null
              },
              "uuid": "00b3c880-5eed-49be-b923-71c300ea8288",
              "parentUUID": "395551de-8443-4ebe-a85b-274e6dc7bd1b",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "checks whethere the account the user signed in into is the users account",
              "fullTitle": "this are tests for sign in checks whethere the account the user signed in into is the users account",
              "timedOut": false,
              "duration": 2284,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "//navigate to login\nawait driver.get(\"http://localhost:5173/signup\");\n//loggin\n//find enteries in the ui\nconst fullname = driver.wait(\n  until.elementLocated(By.name(\"fullName\")),\n  1000\n);\nconst email = driver.wait(until.elementLocated(By.name(\"email\")), 1000);\nconst password = driver.wait(\n  until.elementLocated(By.name(\"password\")),\n  1000\n);\nconst send_btn = driver.wait(\n  until.elementLocated(By.id(\"submit-button\")),\n  1000\n);\nconst userfull_name=\"bereket136\"\nconst useremail=\"bereket136@gmail.com\"\n//insert data to the respective enteries if available\nfullname && (await fullname.sendKeys(userfull_name));\nemail && (await email.sendKeys(useremail));\npassword && (await password.sendKeys(\"bb123456789\"));\n//login\nawait send_btn.click();\n//navigate to profile\nconst profile_link = await driver.wait(\n  until.elementLocated(By.name(\"profile\")),\n  1000\n);\nawait profile_link.click();\n//validate that the email the user used to login is the same as the email in the profile\nconst profile_email = driver.wait(\n  until.elementLocated(By.name(\"email\")),\n  1000\n);\nassert.strictEqual(useremail, await profile_email.getText());",
              "err": {
                "message": "TimeoutError: Waiting for element to be located By(css selector, *[name=\"profile\"])\nWait timed out after 1173ms",
                "estack": "TimeoutError: Waiting for element to be located By(css selector, *[name=\"profile\"])\nWait timed out after 1173ms\n    at C:\\Users\\bereket\\Documents\\project repositories\\testing-frontend\\node_modules\\selenium-webdriver\\lib\\webdriver.js:929:22\n    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)",
                "diff": null
              },
              "uuid": "3896f4d2-079c-43dd-8826-e866904a56e7",
              "parentUUID": "395551de-8443-4ebe-a85b-274e6dc7bd1b",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "db10e6ca-8610-4fd6-8bb6-c180343e2dcd",
            "08a8598d-a63f-4899-953e-7cbab71ad1ae",
            "0c4ba14a-48de-402f-8144-eafab17c3a4d",
            "4f9b757f-d1d8-410c-83c8-6f8498ab01bb",
            "75fada55-5de6-41c1-9c22-847c812d4136",
            "ce97aba7-0f81-4f50-8d4b-228bcf4aadbd",
            "9ff2b073-520b-49de-8f28-20c1f2cee5ab"
          ],
          "failures": [
            "46ff5c95-5573-436d-b105-014814e93fcd",
            "25206377-1162-4eb5-b311-5fc29332809b",
            "00b3c880-5eed-49be-b923-71c300ea8288",
            "3896f4d2-079c-43dd-8826-e866904a56e7"
          ],
          "pending": [],
          "skipped": [],
          "duration": 19511,
          "root": false,
          "rootEmpty": false,
          "_timeout": 0
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 0
    }
  ],
  "meta": {
    "mocha": {
      "version": "11.4.0"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "mochawesome",
        "saveHtml": true,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false,
        "code": true
      },
      "version": "7.1.3"
    },
    "marge": {
      "options": null,
      "version": "6.2.0"
    }
  }
}