{
  "stats": {
    "suites": 2,
    "tests": 19,
    "passes": 16,
    "pending": 0,
    "failures": 3,
    "start": "2025-05-29T12:39:45.131Z",
    "end": "2025-05-29T12:40:02.835Z",
    "duration": 17704,
    "testsRegistered": 19,
    "passPercent": 84.21052631578947,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "29e5a486-2bf2-4ee8-87c3-c9e05e879eab",
      "title": "",
      "fullFile": "",
      "file": "",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "8df94807-cd14-4685-b2da-a843d4e70502",
          "title": "Login Tests",
          "fullFile": "C:\\Users\\user\\Desktop\\Personal Documents\\Projects\\Class Projects\\Year 4\\Term 3\\Testing Auth\\frontend\\src\\tests\\auth.test.js",
          "file": "\\src\\tests\\auth.test.js",
          "beforeHooks": [
            {
              "title": "\"before all\" hook in \"Login Tests\"",
              "fullTitle": "Login Tests \"before all\" hook in \"Login Tests\"",
              "timedOut": false,
              "duration": 5722,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// Opens browser before any test begins\ndriver = await new Builder().forBrowser(Browser.CHROME).build();",
              "err": {},
              "uuid": "5d81a466-9d7d-4b6a-a520-8ef271b1dad4",
              "parentUUID": "8df94807-cd14-4685-b2da-a843d4e70502",
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [],
          "tests": [
            {
              "title": "Correct Login",
              "fullTitle": "Login Tests Correct Login",
              "timedOut": false,
              "duration": 1412,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// Navigate to login page\nawait driver.get(\"http://localhost:5173/login\");\n// Find entries in the UI\nconst email = driver.findElement(By.name(\"email\"));\nconst password = driver.findElement(By.name(\"password\"));\nconst send_btn = driver.findElement(By.id(\"submit-button\"));\n// Insert data into the respective fields\nemail && (await email.sendKeys(data.email));\npassword && (await password.sendKeys(data.password));\n// Login\nawait send_btn.click();\nif (expectation === \"login\") {\n  const heading = await driver.wait(\n    until.elementLocated(By.name(\"heading\")),\n    1000\n  );\n  assert.ok(heading);\n  const logout_btn = await driver.wait(\n    until.elementLocated(By.name(\"logout\")),\n    1000\n  );\n  await logout_btn.click();\n} else if (expectation === \"error message\") {\n  const error = await driver.wait(\n    until.elementLocated(\n      By.xpath(`//div[contains(text(),'${error_message}')]`)\n    ),\n    1000\n  );\n  assert.ok(error);\n}",
              "err": {},
              "uuid": "7ae1dd62-a14d-4829-b8d0-d92a609d979d",
              "parentUUID": "8df94807-cd14-4685-b2da-a843d4e70502",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Handled Incorrect Email",
              "fullTitle": "Login Tests Handled Incorrect Email",
              "timedOut": false,
              "duration": 479,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// Navigate to login page\nawait driver.get(\"http://localhost:5173/login\");\n// Find entries in the UI\nconst email = driver.findElement(By.name(\"email\"));\nconst password = driver.findElement(By.name(\"password\"));\nconst send_btn = driver.findElement(By.id(\"submit-button\"));\n// Insert data into the respective fields\nemail && (await email.sendKeys(data.email));\npassword && (await password.sendKeys(data.password));\n// Login\nawait send_btn.click();\nif (expectation === \"login\") {\n  const heading = await driver.wait(\n    until.elementLocated(By.name(\"heading\")),\n    1000\n  );\n  assert.ok(heading);\n  const logout_btn = await driver.wait(\n    until.elementLocated(By.name(\"logout\")),\n    1000\n  );\n  await logout_btn.click();\n} else if (expectation === \"error message\") {\n  const error = await driver.wait(\n    until.elementLocated(\n      By.xpath(`//div[contains(text(),'${error_message}')]`)\n    ),\n    1000\n  );\n  assert.ok(error);\n}",
              "err": {},
              "uuid": "46cb7a58-9ea5-488f-845b-047c20eb1bc6",
              "parentUUID": "8df94807-cd14-4685-b2da-a843d4e70502",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Handled Incorrect Password",
              "fullTitle": "Login Tests Handled Incorrect Password",
              "timedOut": false,
              "duration": 451,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// Navigate to login page\nawait driver.get(\"http://localhost:5173/login\");\n// Find entries in the UI\nconst email = driver.findElement(By.name(\"email\"));\nconst password = driver.findElement(By.name(\"password\"));\nconst send_btn = driver.findElement(By.id(\"submit-button\"));\n// Insert data into the respective fields\nemail && (await email.sendKeys(data.email));\npassword && (await password.sendKeys(data.password));\n// Login\nawait send_btn.click();\nif (expectation === \"login\") {\n  const heading = await driver.wait(\n    until.elementLocated(By.name(\"heading\")),\n    1000\n  );\n  assert.ok(heading);\n  const logout_btn = await driver.wait(\n    until.elementLocated(By.name(\"logout\")),\n    1000\n  );\n  await logout_btn.click();\n} else if (expectation === \"error message\") {\n  const error = await driver.wait(\n    until.elementLocated(\n      By.xpath(`//div[contains(text(),'${error_message}')]`)\n    ),\n    1000\n  );\n  assert.ok(error);\n}",
              "err": {},
              "uuid": "8bb7fa08-d51b-46b8-bc50-3903aef2f713",
              "parentUUID": "8df94807-cd14-4685-b2da-a843d4e70502",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Handled Incorrect Password and Email",
              "fullTitle": "Login Tests Handled Incorrect Password and Email",
              "timedOut": false,
              "duration": 433,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// Navigate to login page\nawait driver.get(\"http://localhost:5173/login\");\n// Find entries in the UI\nconst email = driver.findElement(By.name(\"email\"));\nconst password = driver.findElement(By.name(\"password\"));\nconst send_btn = driver.findElement(By.id(\"submit-button\"));\n// Insert data into the respective fields\nemail && (await email.sendKeys(data.email));\npassword && (await password.sendKeys(data.password));\n// Login\nawait send_btn.click();\nif (expectation === \"login\") {\n  const heading = await driver.wait(\n    until.elementLocated(By.name(\"heading\")),\n    1000\n  );\n  assert.ok(heading);\n  const logout_btn = await driver.wait(\n    until.elementLocated(By.name(\"logout\")),\n    1000\n  );\n  await logout_btn.click();\n} else if (expectation === \"error message\") {\n  const error = await driver.wait(\n    until.elementLocated(\n      By.xpath(`//div[contains(text(),'${error_message}')]`)\n    ),\n    1000\n  );\n  assert.ok(error);\n}",
              "err": {},
              "uuid": "812c7038-997e-4958-ac79-6b6a0e4b22ad",
              "parentUUID": "8df94807-cd14-4685-b2da-a843d4e70502",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Handled Missing Password",
              "fullTitle": "Login Tests Handled Missing Password",
              "timedOut": false,
              "duration": 200,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// Navigate to login page\nawait driver.get(\"http://localhost:5173/login\");\n// Find entries in the UI\nconst email = driver.findElement(By.name(\"email\"));\nconst password = driver.findElement(By.name(\"password\"));\nconst send_btn = driver.findElement(By.id(\"submit-button\"));\n// Insert data into the respective fields\nemail && (await email.sendKeys(data.email));\npassword && (await password.sendKeys(data.password));\n// Login\nawait send_btn.click();\nif (expectation === \"login\") {\n  const heading = await driver.wait(\n    until.elementLocated(By.name(\"heading\")),\n    1000\n  );\n  assert.ok(heading);\n  const logout_btn = await driver.wait(\n    until.elementLocated(By.name(\"logout\")),\n    1000\n  );\n  await logout_btn.click();\n} else if (expectation === \"error message\") {\n  const error = await driver.wait(\n    until.elementLocated(\n      By.xpath(`//div[contains(text(),'${error_message}')]`)\n    ),\n    1000\n  );\n  assert.ok(error);\n}",
              "err": {},
              "uuid": "8443e80b-f3b2-42bd-8354-d02429014157",
              "parentUUID": "8df94807-cd14-4685-b2da-a843d4e70502",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Handled Missing Email",
              "fullTitle": "Login Tests Handled Missing Email",
              "timedOut": false,
              "duration": 169,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// Navigate to login page\nawait driver.get(\"http://localhost:5173/login\");\n// Find entries in the UI\nconst email = driver.findElement(By.name(\"email\"));\nconst password = driver.findElement(By.name(\"password\"));\nconst send_btn = driver.findElement(By.id(\"submit-button\"));\n// Insert data into the respective fields\nemail && (await email.sendKeys(data.email));\npassword && (await password.sendKeys(data.password));\n// Login\nawait send_btn.click();\nif (expectation === \"login\") {\n  const heading = await driver.wait(\n    until.elementLocated(By.name(\"heading\")),\n    1000\n  );\n  assert.ok(heading);\n  const logout_btn = await driver.wait(\n    until.elementLocated(By.name(\"logout\")),\n    1000\n  );\n  await logout_btn.click();\n} else if (expectation === \"error message\") {\n  const error = await driver.wait(\n    until.elementLocated(\n      By.xpath(`//div[contains(text(),'${error_message}')]`)\n    ),\n    1000\n  );\n  assert.ok(error);\n}",
              "err": {},
              "uuid": "3b9303f6-19cc-432d-a7d0-cb7c33a59833",
              "parentUUID": "8df94807-cd14-4685-b2da-a843d4e70502",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Handled Short Password",
              "fullTitle": "Login Tests Handled Short Password",
              "timedOut": false,
              "duration": 200,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// Navigate to login page\nawait driver.get(\"http://localhost:5173/login\");\n// Find entries in the UI\nconst email = driver.findElement(By.name(\"email\"));\nconst password = driver.findElement(By.name(\"password\"));\nconst send_btn = driver.findElement(By.id(\"submit-button\"));\n// Insert data into the respective fields\nemail && (await email.sendKeys(data.email));\npassword && (await password.sendKeys(data.password));\n// Login\nawait send_btn.click();\nif (expectation === \"login\") {\n  const heading = await driver.wait(\n    until.elementLocated(By.name(\"heading\")),\n    1000\n  );\n  assert.ok(heading);\n  const logout_btn = await driver.wait(\n    until.elementLocated(By.name(\"logout\")),\n    1000\n  );\n  await logout_btn.click();\n} else if (expectation === \"error message\") {\n  const error = await driver.wait(\n    until.elementLocated(\n      By.xpath(`//div[contains(text(),'${error_message}')]`)\n    ),\n    1000\n  );\n  assert.ok(error);\n}",
              "err": {},
              "uuid": "a6718f9b-a9f8-4fc1-898f-9efa68aa41af",
              "parentUUID": "8df94807-cd14-4685-b2da-a843d4e70502",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifies That The Logged In Account Matches The User's Account",
              "fullTitle": "Login Tests Verifies That The Logged In Account Matches The User's Account",
              "timedOut": false,
              "duration": 1002,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// Navigate to login\nawait driver.get(\"http://localhost:5173/login\");\n// Login\nconst useremail = \"bereket@gmail.com\";\nconst userpassword = \"b123456789\";\nconst email = driver.findElement(By.name(\"email\"));\nconst password = driver.findElement(By.name(\"password\"));\nconst send_btn = driver.findElement(By.id(\"submit-button\"));\nemail && (await email.sendKeys(useremail));\npassword && (await password.sendKeys(userpassword));\nawait send_btn.click();\n// Navigate to profile\nconst profile_link = await driver.wait(\n  until.elementLocated(By.name(\"profile\")),\n  1000\n);\nawait profile_link.click();\n// Validate that the email used for login matches the profile email\nconst profile_email = driver.wait(\n  until.elementLocated(By.name(\"email\")),\n  1000\n);\nassert.strictEqual(useremail, await profile_email.getText());\nconst logout_btn = await driver.wait(\n  until.elementLocated(By.name(\"logout\")),\n  1000\n);\nawait logout_btn.click();",
              "err": {},
              "uuid": "bd4dcfb5-d1b6-4450-96ca-608503f4b15a",
              "parentUUID": "8df94807-cd14-4685-b2da-a843d4e70502",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "7ae1dd62-a14d-4829-b8d0-d92a609d979d",
            "46cb7a58-9ea5-488f-845b-047c20eb1bc6",
            "8bb7fa08-d51b-46b8-bc50-3903aef2f713",
            "812c7038-997e-4958-ac79-6b6a0e4b22ad",
            "8443e80b-f3b2-42bd-8354-d02429014157",
            "3b9303f6-19cc-432d-a7d0-cb7c33a59833",
            "a6718f9b-a9f8-4fc1-898f-9efa68aa41af",
            "bd4dcfb5-d1b6-4450-96ca-608503f4b15a"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 4346,
          "root": false,
          "rootEmpty": false,
          "_timeout": 0
        },
        {
          "uuid": "a52b5b94-d32c-421b-b8b0-5401dadca69c",
          "title": "Sign Up Tests",
          "fullFile": "C:\\Users\\user\\Desktop\\Personal Documents\\Projects\\Class Projects\\Year 4\\Term 3\\Testing Auth\\frontend\\src\\tests\\auth.test.js",
          "file": "\\src\\tests\\auth.test.js",
          "beforeHooks": [],
          "afterHooks": [
            {
              "title": "\"after all\" hook in \"Sign Up Tests\"",
              "fullTitle": "Sign Up Tests \"after all\" hook in \"Sign Up Tests\"",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// Close the browser after all tests are run\ndriver.quit();",
              "err": {},
              "uuid": "7e8c2099-be48-47d6-bca7-b2f8eed51fe2",
              "parentUUID": "a52b5b94-d32c-421b-b8b0-5401dadca69c",
              "isHook": true,
              "skipped": false
            }
          ],
          "tests": [
            {
              "title": "Missing Password",
              "fullTitle": "Sign Up Tests Missing Password",
              "timedOut": false,
              "duration": 444,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// Navigate to sign up page\nawait driver.get(\"http://localhost:5173/signup\");\n// Find entries in the UI\nconst fullname = driver.findElement(By.name(\"fullName\"));\nconst email = driver.findElement(By.name(\"email\"));\nconst password = driver.findElement(By.name(\"password\"));\nconst send_btn = driver.findElement(By.id(\"submit-button\"));\n// Insert data into the respective fields\nfullname && (await fullname.sendKeys(data.fullname));\nemail && (await email.sendKeys(data.email));\npassword && (await password.sendKeys(data.password));\n// Sign up\nsend_btn.click();\nif (expectation === \"sign in\") {\n  const heading = await driver.wait(\n    until.elementLocated(By.name(\"heading\")),\n    2000\n  );\n  assert.ok(heading);\n  const logout_btn = await driver.wait(\n    until.elementLocated(By.name(\"logout\")),\n    1000\n  );\n  await logout_btn.click();\n} else if (expectation === \"error message\") {\n  const error = await driver.wait(\n    until.elementLocated(\n      By.xpath(`//div[contains(text(),'${error_message}')]`)\n    ),\n    1000\n  );\n  assert.ok(error);\n}",
              "err": {},
              "uuid": "772dce90-3d1f-4f9e-a8a1-4d13f397cdef",
              "parentUUID": "a52b5b94-d32c-421b-b8b0-5401dadca69c",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Missing Email",
              "fullTitle": "Sign Up Tests Missing Email",
              "timedOut": false,
              "duration": 398,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// Navigate to sign up page\nawait driver.get(\"http://localhost:5173/signup\");\n// Find entries in the UI\nconst fullname = driver.findElement(By.name(\"fullName\"));\nconst email = driver.findElement(By.name(\"email\"));\nconst password = driver.findElement(By.name(\"password\"));\nconst send_btn = driver.findElement(By.id(\"submit-button\"));\n// Insert data into the respective fields\nfullname && (await fullname.sendKeys(data.fullname));\nemail && (await email.sendKeys(data.email));\npassword && (await password.sendKeys(data.password));\n// Sign up\nsend_btn.click();\nif (expectation === \"sign in\") {\n  const heading = await driver.wait(\n    until.elementLocated(By.name(\"heading\")),\n    2000\n  );\n  assert.ok(heading);\n  const logout_btn = await driver.wait(\n    until.elementLocated(By.name(\"logout\")),\n    1000\n  );\n  await logout_btn.click();\n} else if (expectation === \"error message\") {\n  const error = await driver.wait(\n    until.elementLocated(\n      By.xpath(`//div[contains(text(),'${error_message}')]`)\n    ),\n    1000\n  );\n  assert.ok(error);\n}",
              "err": {},
              "uuid": "e0227704-958d-4b5e-888a-9cd5d1f2f69c",
              "parentUUID": "a52b5b94-d32c-421b-b8b0-5401dadca69c",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Missing Full Name",
              "fullTitle": "Sign Up Tests Missing Full Name",
              "timedOut": false,
              "duration": 417,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// Navigate to sign up page\nawait driver.get(\"http://localhost:5173/signup\");\n// Find entries in the UI\nconst fullname = driver.findElement(By.name(\"fullName\"));\nconst email = driver.findElement(By.name(\"email\"));\nconst password = driver.findElement(By.name(\"password\"));\nconst send_btn = driver.findElement(By.id(\"submit-button\"));\n// Insert data into the respective fields\nfullname && (await fullname.sendKeys(data.fullname));\nemail && (await email.sendKeys(data.email));\npassword && (await password.sendKeys(data.password));\n// Sign up\nsend_btn.click();\nif (expectation === \"sign in\") {\n  const heading = await driver.wait(\n    until.elementLocated(By.name(\"heading\")),\n    2000\n  );\n  assert.ok(heading);\n  const logout_btn = await driver.wait(\n    until.elementLocated(By.name(\"logout\")),\n    1000\n  );\n  await logout_btn.click();\n} else if (expectation === \"error message\") {\n  const error = await driver.wait(\n    until.elementLocated(\n      By.xpath(`//div[contains(text(),'${error_message}')]`)\n    ),\n    1000\n  );\n  assert.ok(error);\n}",
              "err": {},
              "uuid": "793f5c3c-09e4-4c12-9fcb-9103212a1fad",
              "parentUUID": "a52b5b94-d32c-421b-b8b0-5401dadca69c",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Missing All Fields",
              "fullTitle": "Sign Up Tests Missing All Fields",
              "timedOut": false,
              "duration": 382,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// Navigate to sign up page\nawait driver.get(\"http://localhost:5173/signup\");\n// Find entries in the UI\nconst fullname = driver.findElement(By.name(\"fullName\"));\nconst email = driver.findElement(By.name(\"email\"));\nconst password = driver.findElement(By.name(\"password\"));\nconst send_btn = driver.findElement(By.id(\"submit-button\"));\n// Insert data into the respective fields\nfullname && (await fullname.sendKeys(data.fullname));\nemail && (await email.sendKeys(data.email));\npassword && (await password.sendKeys(data.password));\n// Sign up\nsend_btn.click();\nif (expectation === \"sign in\") {\n  const heading = await driver.wait(\n    until.elementLocated(By.name(\"heading\")),\n    2000\n  );\n  assert.ok(heading);\n  const logout_btn = await driver.wait(\n    until.elementLocated(By.name(\"logout\")),\n    1000\n  );\n  await logout_btn.click();\n} else if (expectation === \"error message\") {\n  const error = await driver.wait(\n    until.elementLocated(\n      By.xpath(`//div[contains(text(),'${error_message}')]`)\n    ),\n    1000\n  );\n  assert.ok(error);\n}",
              "err": {},
              "uuid": "305520b8-17c4-428a-969a-1e49834906fa",
              "parentUUID": "a52b5b94-d32c-421b-b8b0-5401dadca69c",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Missing Full Name and Password",
              "fullTitle": "Sign Up Tests Missing Full Name and Password",
              "timedOut": false,
              "duration": 418,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// Navigate to sign up page\nawait driver.get(\"http://localhost:5173/signup\");\n// Find entries in the UI\nconst fullname = driver.findElement(By.name(\"fullName\"));\nconst email = driver.findElement(By.name(\"email\"));\nconst password = driver.findElement(By.name(\"password\"));\nconst send_btn = driver.findElement(By.id(\"submit-button\"));\n// Insert data into the respective fields\nfullname && (await fullname.sendKeys(data.fullname));\nemail && (await email.sendKeys(data.email));\npassword && (await password.sendKeys(data.password));\n// Sign up\nsend_btn.click();\nif (expectation === \"sign in\") {\n  const heading = await driver.wait(\n    until.elementLocated(By.name(\"heading\")),\n    2000\n  );\n  assert.ok(heading);\n  const logout_btn = await driver.wait(\n    until.elementLocated(By.name(\"logout\")),\n    1000\n  );\n  await logout_btn.click();\n} else if (expectation === \"error message\") {\n  const error = await driver.wait(\n    until.elementLocated(\n      By.xpath(`//div[contains(text(),'${error_message}')]`)\n    ),\n    1000\n  );\n  assert.ok(error);\n}",
              "err": {},
              "uuid": "12cdfe07-1c65-47a5-88cb-6e871405e2ce",
              "parentUUID": "a52b5b94-d32c-421b-b8b0-5401dadca69c",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Missing Full Name and Email",
              "fullTitle": "Sign Up Tests Missing Full Name and Email",
              "timedOut": false,
              "duration": 207,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// Navigate to sign up page\nawait driver.get(\"http://localhost:5173/signup\");\n// Find entries in the UI\nconst fullname = driver.findElement(By.name(\"fullName\"));\nconst email = driver.findElement(By.name(\"email\"));\nconst password = driver.findElement(By.name(\"password\"));\nconst send_btn = driver.findElement(By.id(\"submit-button\"));\n// Insert data into the respective fields\nfullname && (await fullname.sendKeys(data.fullname));\nemail && (await email.sendKeys(data.email));\npassword && (await password.sendKeys(data.password));\n// Sign up\nsend_btn.click();\nif (expectation === \"sign in\") {\n  const heading = await driver.wait(\n    until.elementLocated(By.name(\"heading\")),\n    2000\n  );\n  assert.ok(heading);\n  const logout_btn = await driver.wait(\n    until.elementLocated(By.name(\"logout\")),\n    1000\n  );\n  await logout_btn.click();\n} else if (expectation === \"error message\") {\n  const error = await driver.wait(\n    until.elementLocated(\n      By.xpath(`//div[contains(text(),'${error_message}')]`)\n    ),\n    1000\n  );\n  assert.ok(error);\n}",
              "err": {},
              "uuid": "510f79ac-3403-4806-acd3-faf224b9c2ea",
              "parentUUID": "a52b5b94-d32c-421b-b8b0-5401dadca69c",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Short Password",
              "fullTitle": "Sign Up Tests Short Password",
              "timedOut": false,
              "duration": 426,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// Navigate to sign up page\nawait driver.get(\"http://localhost:5173/signup\");\n// Find entries in the UI\nconst fullname = driver.findElement(By.name(\"fullName\"));\nconst email = driver.findElement(By.name(\"email\"));\nconst password = driver.findElement(By.name(\"password\"));\nconst send_btn = driver.findElement(By.id(\"submit-button\"));\n// Insert data into the respective fields\nfullname && (await fullname.sendKeys(data.fullname));\nemail && (await email.sendKeys(data.email));\npassword && (await password.sendKeys(data.password));\n// Sign up\nsend_btn.click();\nif (expectation === \"sign in\") {\n  const heading = await driver.wait(\n    until.elementLocated(By.name(\"heading\")),\n    2000\n  );\n  assert.ok(heading);\n  const logout_btn = await driver.wait(\n    until.elementLocated(By.name(\"logout\")),\n    1000\n  );\n  await logout_btn.click();\n} else if (expectation === \"error message\") {\n  const error = await driver.wait(\n    until.elementLocated(\n      By.xpath(`//div[contains(text(),'${error_message}')]`)\n    ),\n    1000\n  );\n  assert.ok(error);\n}",
              "err": {},
              "uuid": "ca86168b-49a3-4876-a704-35f7d6776554",
              "parentUUID": "a52b5b94-d32c-421b-b8b0-5401dadca69c",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Correct Sign Up",
              "fullTitle": "Sign Up Tests Correct Sign Up",
              "timedOut": false,
              "duration": 2416,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "// Navigate to sign up page\nawait driver.get(\"http://localhost:5173/signup\");\n// Find entries in the UI\nconst fullname = driver.findElement(By.name(\"fullName\"));\nconst email = driver.findElement(By.name(\"email\"));\nconst password = driver.findElement(By.name(\"password\"));\nconst send_btn = driver.findElement(By.id(\"submit-button\"));\n// Insert data into the respective fields\nfullname && (await fullname.sendKeys(data.fullname));\nemail && (await email.sendKeys(data.email));\npassword && (await password.sendKeys(data.password));\n// Sign up\nsend_btn.click();\nif (expectation === \"sign in\") {\n  const heading = await driver.wait(\n    until.elementLocated(By.name(\"heading\")),\n    2000\n  );\n  assert.ok(heading);\n  const logout_btn = await driver.wait(\n    until.elementLocated(By.name(\"logout\")),\n    1000\n  );\n  await logout_btn.click();\n} else if (expectation === \"error message\") {\n  const error = await driver.wait(\n    until.elementLocated(\n      By.xpath(`//div[contains(text(),'${error_message}')]`)\n    ),\n    1000\n  );\n  assert.ok(error);\n}",
              "err": {
                "message": "TimeoutError: Waiting for element to be located By(css selector, *[name=\"heading\"])\nWait timed out after 2148ms",
                "estack": "TimeoutError: Waiting for element to be located By(css selector, *[name=\"heading\"])\nWait timed out after 2148ms\n    at C:\\Users\\user\\Desktop\\Personal Documents\\Projects\\Class Projects\\Year 4\\Term 3\\Testing Auth\\frontend\\node_modules\\selenium-webdriver\\lib\\webdriver.js:929:22\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)",
                "diff": null
              },
              "uuid": "e8f47d92-7ebb-4e6c-b6d7-e3e036ab13fc",
              "parentUUID": "a52b5b94-d32c-421b-b8b0-5401dadca69c",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Using Already Registered Email",
              "fullTitle": "Sign Up Tests Using Already Registered Email",
              "timedOut": false,
              "duration": 731,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// Navigate to sign up page\nawait driver.get(\"http://localhost:5173/signup\");\n// Find entries in the UI\nconst fullname = driver.findElement(By.name(\"fullName\"));\nconst email = driver.findElement(By.name(\"email\"));\nconst password = driver.findElement(By.name(\"password\"));\nconst send_btn = driver.findElement(By.id(\"submit-button\"));\n// Insert data into the respective fields\nfullname && (await fullname.sendKeys(data.fullname));\nemail && (await email.sendKeys(data.email));\npassword && (await password.sendKeys(data.password));\n// Sign up\nsend_btn.click();\nif (expectation === \"sign in\") {\n  const heading = await driver.wait(\n    until.elementLocated(By.name(\"heading\")),\n    2000\n  );\n  assert.ok(heading);\n  const logout_btn = await driver.wait(\n    until.elementLocated(By.name(\"logout\")),\n    1000\n  );\n  await logout_btn.click();\n} else if (expectation === \"error message\") {\n  const error = await driver.wait(\n    until.elementLocated(\n      By.xpath(`//div[contains(text(),'${error_message}')]`)\n    ),\n    1000\n  );\n  assert.ok(error);\n}",
              "err": {},
              "uuid": "59347a4f-6e3a-4dbc-83d2-f237825632e9",
              "parentUUID": "a52b5b94-d32c-421b-b8b0-5401dadca69c",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Using Already Registered Name",
              "fullTitle": "Sign Up Tests Using Already Registered Name",
              "timedOut": false,
              "duration": 290,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "// Navigate to sign up page\nawait driver.get(\"http://localhost:5173/signup\");\n// Find entries in the UI\nconst fullname = driver.findElement(By.name(\"fullName\"));\nconst email = driver.findElement(By.name(\"email\"));\nconst password = driver.findElement(By.name(\"password\"));\nconst send_btn = driver.findElement(By.id(\"submit-button\"));\n// Insert data into the respective fields\nfullname && (await fullname.sendKeys(data.fullname));\nemail && (await email.sendKeys(data.email));\npassword && (await password.sendKeys(data.password));\n// Sign up\nsend_btn.click();\nif (expectation === \"sign in\") {\n  const heading = await driver.wait(\n    until.elementLocated(By.name(\"heading\")),\n    2000\n  );\n  assert.ok(heading);\n  const logout_btn = await driver.wait(\n    until.elementLocated(By.name(\"logout\")),\n    1000\n  );\n  await logout_btn.click();\n} else if (expectation === \"error message\") {\n  const error = await driver.wait(\n    until.elementLocated(\n      By.xpath(`//div[contains(text(),'${error_message}')]`)\n    ),\n    1000\n  );\n  assert.ok(error);\n}",
              "err": {
                "message": "InvalidSelectorError: invalid selector: Unable to locate an element with the xpath expression //div[contains(text(),'user's name already exists')] because of the following error:\nSyntaxError: Failed to execute 'evaluate' on 'Document': The string '//div[contains(text(),'user's name already exists')]' is not a valid XPath expression.\n  (Session info: chrome=136.0.7103.114)",
                "estack": "InvalidSelectorError: invalid selector: Unable to locate an element with the xpath expression //div[contains(text(),'user's name already exists')] because of the following error:\nSyntaxError: Failed to execute 'evaluate' on 'Document': The string '//div[contains(text(),'user's name already exists')]' is not a valid XPath expression.\n  (Session info: chrome=136.0.7103.114)\n    at Object.throwDecodedError (node_modules\\selenium-webdriver\\lib\\error.js:523:15)\n    at parseHttpResponse (node_modules\\selenium-webdriver\\lib\\http.js:524:13)\n    at Executor.execute (node_modules\\selenium-webdriver\\lib\\http.js:456:28)\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)\n    at async Driver.execute (node_modules\\selenium-webdriver\\lib\\webdriver.js:745:17)\n    at async Driver.findElements (node_modules\\selenium-webdriver\\lib\\webdriver.js:1073:17)",
                "diff": null
              },
              "uuid": "2420aaa2-e6e3-4722-8b7d-b86ec084157e",
              "parentUUID": "a52b5b94-d32c-421b-b8b0-5401dadca69c",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifies That The Signed Up Account Matches The User's Account",
              "fullTitle": "Sign Up Tests Verifies That The Signed Up Account Matches The User's Account",
              "timedOut": false,
              "duration": 1493,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "// Navigate to sign up page\nawait driver.get(\"http://localhost:5173/signup\");\n// Login via sign up flow\nconst fullname = driver.wait(\n  until.elementLocated(By.name(\"fullName\")),\n  1000\n);\nconst email = driver.wait(until.elementLocated(By.name(\"email\")), 1000);\nconst password = driver.wait(\n  until.elementLocated(By.name(\"password\")),\n  1000\n);\nconst send_btn = driver.wait(\n  until.elementLocated(By.id(\"submit-button\")),\n  1000\n);\nconst userFullName = \"bereket136\";\nconst userEmail = \"bereket136@gmail.com\";\nfullname && (await fullname.sendKeys(userFullName));\nemail && (await email.sendKeys(userEmail));\npassword && (await password.sendKeys(\"bb123456789\"));\n// Sign up\nawait send_btn.click();\n// Navigate to profile\nconst profile_link = await driver.wait(\n  until.elementLocated(By.name(\"profile\")),\n  1000\n);\nawait profile_link.click();\n// Validate that the email used for sign up matches the profile email\nconst profile_email = driver.wait(\n  until.elementLocated(By.name(\"email\")),\n  1000\n);\nassert.strictEqual(userEmail, await profile_email.getText());",
              "err": {
                "message": "TimeoutError: Waiting for element to be located By(css selector, *[name=\"profile\"])\nWait timed out after 1095ms",
                "estack": "TimeoutError: Waiting for element to be located By(css selector, *[name=\"profile\"])\nWait timed out after 1095ms\n    at C:\\Users\\user\\Desktop\\Personal Documents\\Projects\\Class Projects\\Year 4\\Term 3\\Testing Auth\\frontend\\node_modules\\selenium-webdriver\\lib\\webdriver.js:929:22\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)",
                "diff": null
              },
              "uuid": "c9e312db-9e73-44a5-b741-a5aed68e93d3",
              "parentUUID": "a52b5b94-d32c-421b-b8b0-5401dadca69c",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "772dce90-3d1f-4f9e-a8a1-4d13f397cdef",
            "e0227704-958d-4b5e-888a-9cd5d1f2f69c",
            "793f5c3c-09e4-4c12-9fcb-9103212a1fad",
            "305520b8-17c4-428a-969a-1e49834906fa",
            "12cdfe07-1c65-47a5-88cb-6e871405e2ce",
            "510f79ac-3403-4806-acd3-faf224b9c2ea",
            "ca86168b-49a3-4876-a704-35f7d6776554",
            "59347a4f-6e3a-4dbc-83d2-f237825632e9"
          ],
          "failures": [
            "e8f47d92-7ebb-4e6c-b6d7-e3e036ab13fc",
            "2420aaa2-e6e3-4722-8b7d-b86ec084157e",
            "c9e312db-9e73-44a5-b741-a5aed68e93d3"
          ],
          "pending": [],
          "skipped": [],
          "duration": 7622,
          "root": false,
          "rootEmpty": false,
          "_timeout": 0
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 0
    }
  ],
  "meta": {
    "mocha": {
      "version": "11.4.0"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "mochawesome",
        "saveHtml": true,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false,
        "code": true
      },
      "version": "7.1.3"
    },
    "marge": {
      "options": null,
      "version": "6.2.0"
    }
  }
}