{
  "stats": {
    "suites": 2,
    "tests": 19,
    "passes": 16,
    "pending": 0,
    "failures": 3,
    "start": "2025-05-29T10:26:46.784Z",
    "end": "2025-05-29T10:27:00.176Z",
    "duration": 13392,
    "testsRegistered": 19,
    "passPercent": 84.21052631578947,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "0169c28f-9645-43b6-a3f3-8fc0d95e1094",
      "title": "",
      "fullFile": "",
      "file": "",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "ae27d13b-02d3-4f2d-94bf-70abe4f25ebc",
          "title": "Login Tests",
          "fullFile": "C:\\Users\\user\\Desktop\\Personal Documents\\Projects\\Class Projects\\Year 4\\Term 3\\Testing Auth\\frontend\\src\\tests\\auth.test.js",
          "file": "\\src\\tests\\auth.test.js",
          "beforeHooks": [
            {
              "title": "\"before all\" hook in \"Login Tests\"",
              "fullTitle": "Login Tests \"before all\" hook in \"Login Tests\"",
              "timedOut": false,
              "duration": 919,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// Opens browser before any test begins\ndriver = await new Builder().forBrowser(Browser.CHROME).build();",
              "err": {},
              "uuid": "3ea8c3b0-89ca-412f-92ed-bcab887ad596",
              "parentUUID": "ae27d13b-02d3-4f2d-94bf-70abe4f25ebc",
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [],
          "tests": [
            {
              "title": "Correct Login",
              "fullTitle": "Login Tests Correct Login",
              "timedOut": false,
              "duration": 1447,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// Navigate to login page\nawait driver.get(\"http://localhost:5173/login\");\n// Find entries in the UI\nconst email = driver.findElement(By.name(\"email\"));\nconst password = driver.findElement(By.name(\"password\"));\nconst send_btn = driver.findElement(By.id(\"submit-button\"));\n// Insert data into the respective fields\nemail && (await email.sendKeys(data.email));\npassword && (await password.sendKeys(data.password));\n// Login\nawait send_btn.click();\nif (expectation === \"login\") {\n  const heading = await driver.wait(\n    until.elementLocated(By.name(\"heading\")),\n    1000\n  );\n  assert.ok(heading);\n  const logout_btn = await driver.wait(\n    until.elementLocated(By.name(\"logout\")),\n    1000\n  );\n  await logout_btn.click();\n} else if (expectation === \"error message\") {\n  const error = await driver.wait(\n    until.elementLocated(\n      By.xpath(`//div[contains(text(),'${error_message}')]`)\n    ),\n    1000\n  );\n  assert.ok(error);\n}",
              "err": {},
              "uuid": "8b6b263c-a016-48ed-ade5-208c7d129f30",
              "parentUUID": "ae27d13b-02d3-4f2d-94bf-70abe4f25ebc",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Handled Incorrect Email",
              "fullTitle": "Login Tests Handled Incorrect Email",
              "timedOut": false,
              "duration": 540,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// Navigate to login page\nawait driver.get(\"http://localhost:5173/login\");\n// Find entries in the UI\nconst email = driver.findElement(By.name(\"email\"));\nconst password = driver.findElement(By.name(\"password\"));\nconst send_btn = driver.findElement(By.id(\"submit-button\"));\n// Insert data into the respective fields\nemail && (await email.sendKeys(data.email));\npassword && (await password.sendKeys(data.password));\n// Login\nawait send_btn.click();\nif (expectation === \"login\") {\n  const heading = await driver.wait(\n    until.elementLocated(By.name(\"heading\")),\n    1000\n  );\n  assert.ok(heading);\n  const logout_btn = await driver.wait(\n    until.elementLocated(By.name(\"logout\")),\n    1000\n  );\n  await logout_btn.click();\n} else if (expectation === \"error message\") {\n  const error = await driver.wait(\n    until.elementLocated(\n      By.xpath(`//div[contains(text(),'${error_message}')]`)\n    ),\n    1000\n  );\n  assert.ok(error);\n}",
              "err": {},
              "uuid": "492cabfb-ae02-420e-8e3f-0d7936945793",
              "parentUUID": "ae27d13b-02d3-4f2d-94bf-70abe4f25ebc",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Handled Incorrect Password",
              "fullTitle": "Login Tests Handled Incorrect Password",
              "timedOut": false,
              "duration": 479,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// Navigate to login page\nawait driver.get(\"http://localhost:5173/login\");\n// Find entries in the UI\nconst email = driver.findElement(By.name(\"email\"));\nconst password = driver.findElement(By.name(\"password\"));\nconst send_btn = driver.findElement(By.id(\"submit-button\"));\n// Insert data into the respective fields\nemail && (await email.sendKeys(data.email));\npassword && (await password.sendKeys(data.password));\n// Login\nawait send_btn.click();\nif (expectation === \"login\") {\n  const heading = await driver.wait(\n    until.elementLocated(By.name(\"heading\")),\n    1000\n  );\n  assert.ok(heading);\n  const logout_btn = await driver.wait(\n    until.elementLocated(By.name(\"logout\")),\n    1000\n  );\n  await logout_btn.click();\n} else if (expectation === \"error message\") {\n  const error = await driver.wait(\n    until.elementLocated(\n      By.xpath(`//div[contains(text(),'${error_message}')]`)\n    ),\n    1000\n  );\n  assert.ok(error);\n}",
              "err": {},
              "uuid": "2239ab0f-5fb3-4da0-8964-af91e4183ff1",
              "parentUUID": "ae27d13b-02d3-4f2d-94bf-70abe4f25ebc",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Handled Incorrect Password and Email",
              "fullTitle": "Login Tests Handled Incorrect Password and Email",
              "timedOut": false,
              "duration": 467,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// Navigate to login page\nawait driver.get(\"http://localhost:5173/login\");\n// Find entries in the UI\nconst email = driver.findElement(By.name(\"email\"));\nconst password = driver.findElement(By.name(\"password\"));\nconst send_btn = driver.findElement(By.id(\"submit-button\"));\n// Insert data into the respective fields\nemail && (await email.sendKeys(data.email));\npassword && (await password.sendKeys(data.password));\n// Login\nawait send_btn.click();\nif (expectation === \"login\") {\n  const heading = await driver.wait(\n    until.elementLocated(By.name(\"heading\")),\n    1000\n  );\n  assert.ok(heading);\n  const logout_btn = await driver.wait(\n    until.elementLocated(By.name(\"logout\")),\n    1000\n  );\n  await logout_btn.click();\n} else if (expectation === \"error message\") {\n  const error = await driver.wait(\n    until.elementLocated(\n      By.xpath(`//div[contains(text(),'${error_message}')]`)\n    ),\n    1000\n  );\n  assert.ok(error);\n}",
              "err": {},
              "uuid": "3da576ef-190d-46f2-98fe-4bc3f50bbcc2",
              "parentUUID": "ae27d13b-02d3-4f2d-94bf-70abe4f25ebc",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Handled Missing Password",
              "fullTitle": "Login Tests Handled Missing Password",
              "timedOut": false,
              "duration": 218,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// Navigate to login page\nawait driver.get(\"http://localhost:5173/login\");\n// Find entries in the UI\nconst email = driver.findElement(By.name(\"email\"));\nconst password = driver.findElement(By.name(\"password\"));\nconst send_btn = driver.findElement(By.id(\"submit-button\"));\n// Insert data into the respective fields\nemail && (await email.sendKeys(data.email));\npassword && (await password.sendKeys(data.password));\n// Login\nawait send_btn.click();\nif (expectation === \"login\") {\n  const heading = await driver.wait(\n    until.elementLocated(By.name(\"heading\")),\n    1000\n  );\n  assert.ok(heading);\n  const logout_btn = await driver.wait(\n    until.elementLocated(By.name(\"logout\")),\n    1000\n  );\n  await logout_btn.click();\n} else if (expectation === \"error message\") {\n  const error = await driver.wait(\n    until.elementLocated(\n      By.xpath(`//div[contains(text(),'${error_message}')]`)\n    ),\n    1000\n  );\n  assert.ok(error);\n}",
              "err": {},
              "uuid": "5fbccd36-4f1f-4f4f-ac72-592a420ca5f0",
              "parentUUID": "ae27d13b-02d3-4f2d-94bf-70abe4f25ebc",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Handled Missing Email",
              "fullTitle": "Login Tests Handled Missing Email",
              "timedOut": false,
              "duration": 193,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// Navigate to login page\nawait driver.get(\"http://localhost:5173/login\");\n// Find entries in the UI\nconst email = driver.findElement(By.name(\"email\"));\nconst password = driver.findElement(By.name(\"password\"));\nconst send_btn = driver.findElement(By.id(\"submit-button\"));\n// Insert data into the respective fields\nemail && (await email.sendKeys(data.email));\npassword && (await password.sendKeys(data.password));\n// Login\nawait send_btn.click();\nif (expectation === \"login\") {\n  const heading = await driver.wait(\n    until.elementLocated(By.name(\"heading\")),\n    1000\n  );\n  assert.ok(heading);\n  const logout_btn = await driver.wait(\n    until.elementLocated(By.name(\"logout\")),\n    1000\n  );\n  await logout_btn.click();\n} else if (expectation === \"error message\") {\n  const error = await driver.wait(\n    until.elementLocated(\n      By.xpath(`//div[contains(text(),'${error_message}')]`)\n    ),\n    1000\n  );\n  assert.ok(error);\n}",
              "err": {},
              "uuid": "170e879b-2d0e-440c-9244-8dc3d30be21d",
              "parentUUID": "ae27d13b-02d3-4f2d-94bf-70abe4f25ebc",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Handled Short Password",
              "fullTitle": "Login Tests Handled Short Password",
              "timedOut": false,
              "duration": 238,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// Navigate to login page\nawait driver.get(\"http://localhost:5173/login\");\n// Find entries in the UI\nconst email = driver.findElement(By.name(\"email\"));\nconst password = driver.findElement(By.name(\"password\"));\nconst send_btn = driver.findElement(By.id(\"submit-button\"));\n// Insert data into the respective fields\nemail && (await email.sendKeys(data.email));\npassword && (await password.sendKeys(data.password));\n// Login\nawait send_btn.click();\nif (expectation === \"login\") {\n  const heading = await driver.wait(\n    until.elementLocated(By.name(\"heading\")),\n    1000\n  );\n  assert.ok(heading);\n  const logout_btn = await driver.wait(\n    until.elementLocated(By.name(\"logout\")),\n    1000\n  );\n  await logout_btn.click();\n} else if (expectation === \"error message\") {\n  const error = await driver.wait(\n    until.elementLocated(\n      By.xpath(`//div[contains(text(),'${error_message}')]`)\n    ),\n    1000\n  );\n  assert.ok(error);\n}",
              "err": {},
              "uuid": "b8bbd966-04ef-4ccb-a046-4f88bf33e0f0",
              "parentUUID": "ae27d13b-02d3-4f2d-94bf-70abe4f25ebc",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifies That The Logged In Account Matches The User's Account",
              "fullTitle": "Login Tests Verifies That The Logged In Account Matches The User's Account",
              "timedOut": false,
              "duration": 1070,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// Navigate to login\nawait driver.get(\"http://localhost:5173/login\");\n// Login\nconst useremail = \"bereket@gmail.com\";\nconst userpassword = \"b123456789\";\nconst email = driver.findElement(By.name(\"email\"));\nconst password = driver.findElement(By.name(\"password\"));\nconst send_btn = driver.findElement(By.id(\"submit-button\"));\nemail && (await email.sendKeys(useremail));\npassword && (await password.sendKeys(userpassword));\nawait send_btn.click();\n// Navigate to profile\nconst profile_link = await driver.wait(\n  until.elementLocated(By.name(\"profile\")),\n  1000\n);\nawait profile_link.click();\n// Validate that the email used for login matches the profile email\nconst profile_email = driver.wait(\n  until.elementLocated(By.name(\"email\")),\n  1000\n);\nassert.strictEqual(useremail, await profile_email.getText());\nconst logout_btn = await driver.wait(\n  until.elementLocated(By.name(\"logout\")),\n  1000\n);\nawait logout_btn.click();",
              "err": {},
              "uuid": "bd8e8ff2-d7f6-4341-9d0e-46d52b4037d4",
              "parentUUID": "ae27d13b-02d3-4f2d-94bf-70abe4f25ebc",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "8b6b263c-a016-48ed-ade5-208c7d129f30",
            "492cabfb-ae02-420e-8e3f-0d7936945793",
            "2239ab0f-5fb3-4da0-8964-af91e4183ff1",
            "3da576ef-190d-46f2-98fe-4bc3f50bbcc2",
            "5fbccd36-4f1f-4f4f-ac72-592a420ca5f0",
            "170e879b-2d0e-440c-9244-8dc3d30be21d",
            "b8bbd966-04ef-4ccb-a046-4f88bf33e0f0",
            "bd8e8ff2-d7f6-4341-9d0e-46d52b4037d4"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 4652,
          "root": false,
          "rootEmpty": false,
          "_timeout": 0
        },
        {
          "uuid": "1d72b729-8daf-4d35-accd-26959036ece7",
          "title": "Sign Up Tests",
          "fullFile": "C:\\Users\\user\\Desktop\\Personal Documents\\Projects\\Class Projects\\Year 4\\Term 3\\Testing Auth\\frontend\\src\\tests\\auth.test.js",
          "file": "\\src\\tests\\auth.test.js",
          "beforeHooks": [],
          "afterHooks": [
            {
              "title": "\"after all\" hook in \"Sign Up Tests\"",
              "fullTitle": "Sign Up Tests \"after all\" hook in \"Sign Up Tests\"",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// Close the browser after all tests are run\ndriver.quit();",
              "err": {},
              "uuid": "beb8931e-f6ef-49fa-964f-a226cfbbb666",
              "parentUUID": "1d72b729-8daf-4d35-accd-26959036ece7",
              "isHook": true,
              "skipped": false
            }
          ],
          "tests": [
            {
              "title": "Missing Password",
              "fullTitle": "Sign Up Tests Missing Password",
              "timedOut": false,
              "duration": 478,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// Navigate to sign up page\nawait driver.get(\"http://localhost:5173/signup\");\n// Find entries in the UI\nconst fullname = driver.findElement(By.name(\"fullName\"));\nconst email = driver.findElement(By.name(\"email\"));\nconst password = driver.findElement(By.name(\"password\"));\nconst send_btn = driver.findElement(By.id(\"submit-button\"));\n// Insert data into the respective fields\nfullname && (await fullname.sendKeys(data.fullname));\nemail && (await email.sendKeys(data.email));\npassword && (await password.sendKeys(data.password));\n// Sign up\nsend_btn.click();\nif (expectation === \"sign in\") {\n  const heading = await driver.wait(\n    until.elementLocated(By.name(\"heading\")),\n    2000\n  );\n  assert.ok(heading);\n  const logout_btn = await driver.wait(\n    until.elementLocated(By.name(\"logout\")),\n    1000\n  );\n  await logout_btn.click();\n} else if (expectation === \"error message\") {\n  const error = await driver.wait(\n    until.elementLocated(\n      By.xpath(`//div[contains(text(),'${error_message}')]`)\n    ),\n    1000\n  );\n  assert.ok(error);\n}",
              "err": {},
              "uuid": "df36c0c2-8bff-456d-8a94-69c13d35affd",
              "parentUUID": "1d72b729-8daf-4d35-accd-26959036ece7",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Missing Email",
              "fullTitle": "Sign Up Tests Missing Email",
              "timedOut": false,
              "duration": 422,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// Navigate to sign up page\nawait driver.get(\"http://localhost:5173/signup\");\n// Find entries in the UI\nconst fullname = driver.findElement(By.name(\"fullName\"));\nconst email = driver.findElement(By.name(\"email\"));\nconst password = driver.findElement(By.name(\"password\"));\nconst send_btn = driver.findElement(By.id(\"submit-button\"));\n// Insert data into the respective fields\nfullname && (await fullname.sendKeys(data.fullname));\nemail && (await email.sendKeys(data.email));\npassword && (await password.sendKeys(data.password));\n// Sign up\nsend_btn.click();\nif (expectation === \"sign in\") {\n  const heading = await driver.wait(\n    until.elementLocated(By.name(\"heading\")),\n    2000\n  );\n  assert.ok(heading);\n  const logout_btn = await driver.wait(\n    until.elementLocated(By.name(\"logout\")),\n    1000\n  );\n  await logout_btn.click();\n} else if (expectation === \"error message\") {\n  const error = await driver.wait(\n    until.elementLocated(\n      By.xpath(`//div[contains(text(),'${error_message}')]`)\n    ),\n    1000\n  );\n  assert.ok(error);\n}",
              "err": {},
              "uuid": "81081b74-8572-485f-97df-e7d5aa2814a1",
              "parentUUID": "1d72b729-8daf-4d35-accd-26959036ece7",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Missing Full Name",
              "fullTitle": "Sign Up Tests Missing Full Name",
              "timedOut": false,
              "duration": 435,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// Navigate to sign up page\nawait driver.get(\"http://localhost:5173/signup\");\n// Find entries in the UI\nconst fullname = driver.findElement(By.name(\"fullName\"));\nconst email = driver.findElement(By.name(\"email\"));\nconst password = driver.findElement(By.name(\"password\"));\nconst send_btn = driver.findElement(By.id(\"submit-button\"));\n// Insert data into the respective fields\nfullname && (await fullname.sendKeys(data.fullname));\nemail && (await email.sendKeys(data.email));\npassword && (await password.sendKeys(data.password));\n// Sign up\nsend_btn.click();\nif (expectation === \"sign in\") {\n  const heading = await driver.wait(\n    until.elementLocated(By.name(\"heading\")),\n    2000\n  );\n  assert.ok(heading);\n  const logout_btn = await driver.wait(\n    until.elementLocated(By.name(\"logout\")),\n    1000\n  );\n  await logout_btn.click();\n} else if (expectation === \"error message\") {\n  const error = await driver.wait(\n    until.elementLocated(\n      By.xpath(`//div[contains(text(),'${error_message}')]`)\n    ),\n    1000\n  );\n  assert.ok(error);\n}",
              "err": {},
              "uuid": "5622b5f1-0883-4341-bf09-0f2b7f383ee2",
              "parentUUID": "1d72b729-8daf-4d35-accd-26959036ece7",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Missing All Fields",
              "fullTitle": "Sign Up Tests Missing All Fields",
              "timedOut": false,
              "duration": 385,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// Navigate to sign up page\nawait driver.get(\"http://localhost:5173/signup\");\n// Find entries in the UI\nconst fullname = driver.findElement(By.name(\"fullName\"));\nconst email = driver.findElement(By.name(\"email\"));\nconst password = driver.findElement(By.name(\"password\"));\nconst send_btn = driver.findElement(By.id(\"submit-button\"));\n// Insert data into the respective fields\nfullname && (await fullname.sendKeys(data.fullname));\nemail && (await email.sendKeys(data.email));\npassword && (await password.sendKeys(data.password));\n// Sign up\nsend_btn.click();\nif (expectation === \"sign in\") {\n  const heading = await driver.wait(\n    until.elementLocated(By.name(\"heading\")),\n    2000\n  );\n  assert.ok(heading);\n  const logout_btn = await driver.wait(\n    until.elementLocated(By.name(\"logout\")),\n    1000\n  );\n  await logout_btn.click();\n} else if (expectation === \"error message\") {\n  const error = await driver.wait(\n    until.elementLocated(\n      By.xpath(`//div[contains(text(),'${error_message}')]`)\n    ),\n    1000\n  );\n  assert.ok(error);\n}",
              "err": {},
              "uuid": "b8bbe775-a633-4470-8392-4c8c71bcaaad",
              "parentUUID": "1d72b729-8daf-4d35-accd-26959036ece7",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Missing Full Name and Password",
              "fullTitle": "Sign Up Tests Missing Full Name and Password",
              "timedOut": false,
              "duration": 436,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// Navigate to sign up page\nawait driver.get(\"http://localhost:5173/signup\");\n// Find entries in the UI\nconst fullname = driver.findElement(By.name(\"fullName\"));\nconst email = driver.findElement(By.name(\"email\"));\nconst password = driver.findElement(By.name(\"password\"));\nconst send_btn = driver.findElement(By.id(\"submit-button\"));\n// Insert data into the respective fields\nfullname && (await fullname.sendKeys(data.fullname));\nemail && (await email.sendKeys(data.email));\npassword && (await password.sendKeys(data.password));\n// Sign up\nsend_btn.click();\nif (expectation === \"sign in\") {\n  const heading = await driver.wait(\n    until.elementLocated(By.name(\"heading\")),\n    2000\n  );\n  assert.ok(heading);\n  const logout_btn = await driver.wait(\n    until.elementLocated(By.name(\"logout\")),\n    1000\n  );\n  await logout_btn.click();\n} else if (expectation === \"error message\") {\n  const error = await driver.wait(\n    until.elementLocated(\n      By.xpath(`//div[contains(text(),'${error_message}')]`)\n    ),\n    1000\n  );\n  assert.ok(error);\n}",
              "err": {},
              "uuid": "77bb1b48-4437-4230-bd18-3932591b55af",
              "parentUUID": "1d72b729-8daf-4d35-accd-26959036ece7",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Missing Full Name and Email",
              "fullTitle": "Sign Up Tests Missing Full Name and Email",
              "timedOut": false,
              "duration": 419,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// Navigate to sign up page\nawait driver.get(\"http://localhost:5173/signup\");\n// Find entries in the UI\nconst fullname = driver.findElement(By.name(\"fullName\"));\nconst email = driver.findElement(By.name(\"email\"));\nconst password = driver.findElement(By.name(\"password\"));\nconst send_btn = driver.findElement(By.id(\"submit-button\"));\n// Insert data into the respective fields\nfullname && (await fullname.sendKeys(data.fullname));\nemail && (await email.sendKeys(data.email));\npassword && (await password.sendKeys(data.password));\n// Sign up\nsend_btn.click();\nif (expectation === \"sign in\") {\n  const heading = await driver.wait(\n    until.elementLocated(By.name(\"heading\")),\n    2000\n  );\n  assert.ok(heading);\n  const logout_btn = await driver.wait(\n    until.elementLocated(By.name(\"logout\")),\n    1000\n  );\n  await logout_btn.click();\n} else if (expectation === \"error message\") {\n  const error = await driver.wait(\n    until.elementLocated(\n      By.xpath(`//div[contains(text(),'${error_message}')]`)\n    ),\n    1000\n  );\n  assert.ok(error);\n}",
              "err": {},
              "uuid": "b24c8599-a521-4b91-beed-b9ebd9d1c897",
              "parentUUID": "1d72b729-8daf-4d35-accd-26959036ece7",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Short Password",
              "fullTitle": "Sign Up Tests Short Password",
              "timedOut": false,
              "duration": 452,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// Navigate to sign up page\nawait driver.get(\"http://localhost:5173/signup\");\n// Find entries in the UI\nconst fullname = driver.findElement(By.name(\"fullName\"));\nconst email = driver.findElement(By.name(\"email\"));\nconst password = driver.findElement(By.name(\"password\"));\nconst send_btn = driver.findElement(By.id(\"submit-button\"));\n// Insert data into the respective fields\nfullname && (await fullname.sendKeys(data.fullname));\nemail && (await email.sendKeys(data.email));\npassword && (await password.sendKeys(data.password));\n// Sign up\nsend_btn.click();\nif (expectation === \"sign in\") {\n  const heading = await driver.wait(\n    until.elementLocated(By.name(\"heading\")),\n    2000\n  );\n  assert.ok(heading);\n  const logout_btn = await driver.wait(\n    until.elementLocated(By.name(\"logout\")),\n    1000\n  );\n  await logout_btn.click();\n} else if (expectation === \"error message\") {\n  const error = await driver.wait(\n    until.elementLocated(\n      By.xpath(`//div[contains(text(),'${error_message}')]`)\n    ),\n    1000\n  );\n  assert.ok(error);\n}",
              "err": {},
              "uuid": "bf6f1a11-5a64-4fcd-9f02-480246d91497",
              "parentUUID": "1d72b729-8daf-4d35-accd-26959036ece7",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Correct Sign Up",
              "fullTitle": "Sign Up Tests Correct Sign Up",
              "timedOut": false,
              "duration": 2440,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "// Navigate to sign up page\nawait driver.get(\"http://localhost:5173/signup\");\n// Find entries in the UI\nconst fullname = driver.findElement(By.name(\"fullName\"));\nconst email = driver.findElement(By.name(\"email\"));\nconst password = driver.findElement(By.name(\"password\"));\nconst send_btn = driver.findElement(By.id(\"submit-button\"));\n// Insert data into the respective fields\nfullname && (await fullname.sendKeys(data.fullname));\nemail && (await email.sendKeys(data.email));\npassword && (await password.sendKeys(data.password));\n// Sign up\nsend_btn.click();\nif (expectation === \"sign in\") {\n  const heading = await driver.wait(\n    until.elementLocated(By.name(\"heading\")),\n    2000\n  );\n  assert.ok(heading);\n  const logout_btn = await driver.wait(\n    until.elementLocated(By.name(\"logout\")),\n    1000\n  );\n  await logout_btn.click();\n} else if (expectation === \"error message\") {\n  const error = await driver.wait(\n    until.elementLocated(\n      By.xpath(`//div[contains(text(),'${error_message}')]`)\n    ),\n    1000\n  );\n  assert.ok(error);\n}",
              "err": {
                "message": "TimeoutError: Waiting for element to be located By(css selector, *[name=\"heading\"])\nWait timed out after 2180ms",
                "estack": "TimeoutError: Waiting for element to be located By(css selector, *[name=\"heading\"])\nWait timed out after 2180ms\n    at C:\\Users\\user\\Desktop\\Personal Documents\\Projects\\Class Projects\\Year 4\\Term 3\\Testing Auth\\frontend\\node_modules\\selenium-webdriver\\lib\\webdriver.js:929:22\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)",
                "diff": null
              },
              "uuid": "ea23252d-b7eb-48d5-b9cc-90947346fda8",
              "parentUUID": "1d72b729-8daf-4d35-accd-26959036ece7",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Using Already Registered Email",
              "fullTitle": "Sign Up Tests Using Already Registered Email",
              "timedOut": false,
              "duration": 665,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// Navigate to sign up page\nawait driver.get(\"http://localhost:5173/signup\");\n// Find entries in the UI\nconst fullname = driver.findElement(By.name(\"fullName\"));\nconst email = driver.findElement(By.name(\"email\"));\nconst password = driver.findElement(By.name(\"password\"));\nconst send_btn = driver.findElement(By.id(\"submit-button\"));\n// Insert data into the respective fields\nfullname && (await fullname.sendKeys(data.fullname));\nemail && (await email.sendKeys(data.email));\npassword && (await password.sendKeys(data.password));\n// Sign up\nsend_btn.click();\nif (expectation === \"sign in\") {\n  const heading = await driver.wait(\n    until.elementLocated(By.name(\"heading\")),\n    2000\n  );\n  assert.ok(heading);\n  const logout_btn = await driver.wait(\n    until.elementLocated(By.name(\"logout\")),\n    1000\n  );\n  await logout_btn.click();\n} else if (expectation === \"error message\") {\n  const error = await driver.wait(\n    until.elementLocated(\n      By.xpath(`//div[contains(text(),'${error_message}')]`)\n    ),\n    1000\n  );\n  assert.ok(error);\n}",
              "err": {},
              "uuid": "d1f5ca69-1796-45f7-a866-bf852076b28b",
              "parentUUID": "1d72b729-8daf-4d35-accd-26959036ece7",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Using Already Registered Name",
              "fullTitle": "Sign Up Tests Using Already Registered Name",
              "timedOut": false,
              "duration": 247,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "// Navigate to sign up page\nawait driver.get(\"http://localhost:5173/signup\");\n// Find entries in the UI\nconst fullname = driver.findElement(By.name(\"fullName\"));\nconst email = driver.findElement(By.name(\"email\"));\nconst password = driver.findElement(By.name(\"password\"));\nconst send_btn = driver.findElement(By.id(\"submit-button\"));\n// Insert data into the respective fields\nfullname && (await fullname.sendKeys(data.fullname));\nemail && (await email.sendKeys(data.email));\npassword && (await password.sendKeys(data.password));\n// Sign up\nsend_btn.click();\nif (expectation === \"sign in\") {\n  const heading = await driver.wait(\n    until.elementLocated(By.name(\"heading\")),\n    2000\n  );\n  assert.ok(heading);\n  const logout_btn = await driver.wait(\n    until.elementLocated(By.name(\"logout\")),\n    1000\n  );\n  await logout_btn.click();\n} else if (expectation === \"error message\") {\n  const error = await driver.wait(\n    until.elementLocated(\n      By.xpath(`//div[contains(text(),'${error_message}')]`)\n    ),\n    1000\n  );\n  assert.ok(error);\n}",
              "err": {
                "message": "InvalidSelectorError: invalid selector: Unable to locate an element with the xpath expression //div[contains(text(),'user's name already exists')] because of the following error:\nSyntaxError: Failed to execute 'evaluate' on 'Document': The string '//div[contains(text(),'user's name already exists')]' is not a valid XPath expression.\n  (Session info: chrome=136.0.7103.114)",
                "estack": "InvalidSelectorError: invalid selector: Unable to locate an element with the xpath expression //div[contains(text(),'user's name already exists')] because of the following error:\nSyntaxError: Failed to execute 'evaluate' on 'Document': The string '//div[contains(text(),'user's name already exists')]' is not a valid XPath expression.\n  (Session info: chrome=136.0.7103.114)\n    at Object.throwDecodedError (node_modules\\selenium-webdriver\\lib\\error.js:523:15)\n    at parseHttpResponse (node_modules\\selenium-webdriver\\lib\\http.js:524:13)\n    at Executor.execute (node_modules\\selenium-webdriver\\lib\\http.js:456:28)\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)\n    at async Driver.execute (node_modules\\selenium-webdriver\\lib\\webdriver.js:745:17)\n    at async Driver.findElements (node_modules\\selenium-webdriver\\lib\\webdriver.js:1073:17)",
                "diff": null
              },
              "uuid": "f9effbc1-ec39-4a2e-b7fc-bbd5d6f0ee1f",
              "parentUUID": "1d72b729-8daf-4d35-accd-26959036ece7",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifies That The Signed Up Account Matches The User's Account",
              "fullTitle": "Sign Up Tests Verifies That The Signed Up Account Matches The User's Account",
              "timedOut": false,
              "duration": 1425,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "// Navigate to sign up page\nawait driver.get(\"http://localhost:5173/signup\");\n// Login via sign up flow\nconst fullname = driver.wait(\n  until.elementLocated(By.name(\"fullName\")),\n  1000\n);\nconst email = driver.wait(until.elementLocated(By.name(\"email\")), 1000);\nconst password = driver.wait(\n  until.elementLocated(By.name(\"password\")),\n  1000\n);\nconst send_btn = driver.wait(\n  until.elementLocated(By.id(\"submit-button\")),\n  1000\n);\nconst userFullName = \"bereket136\";\nconst userEmail = \"bereket136@gmail.com\";\nfullname && (await fullname.sendKeys(userFullName));\nemail && (await email.sendKeys(userEmail));\npassword && (await password.sendKeys(\"bb123456789\"));\n// Sign up\nawait send_btn.click();\n// Navigate to profile\nconst profile_link = await driver.wait(\n  until.elementLocated(By.name(\"profile\")),\n  1000\n);\nawait profile_link.click();\n// Validate that the email used for sign up matches the profile email\nconst profile_email = driver.wait(\n  until.elementLocated(By.name(\"email\")),\n  1000\n);\nassert.strictEqual(userEmail, await profile_email.getText());",
              "err": {
                "message": "TimeoutError: Waiting for element to be located By(css selector, *[name=\"profile\"])\nWait timed out after 1085ms",
                "estack": "TimeoutError: Waiting for element to be located By(css selector, *[name=\"profile\"])\nWait timed out after 1085ms\n    at C:\\Users\\user\\Desktop\\Personal Documents\\Projects\\Class Projects\\Year 4\\Term 3\\Testing Auth\\frontend\\node_modules\\selenium-webdriver\\lib\\webdriver.js:929:22\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)",
                "diff": null
              },
              "uuid": "d657b360-6cf7-460d-a6d1-9527f8d79756",
              "parentUUID": "1d72b729-8daf-4d35-accd-26959036ece7",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "df36c0c2-8bff-456d-8a94-69c13d35affd",
            "81081b74-8572-485f-97df-e7d5aa2814a1",
            "5622b5f1-0883-4341-bf09-0f2b7f383ee2",
            "b8bbe775-a633-4470-8392-4c8c71bcaaad",
            "77bb1b48-4437-4230-bd18-3932591b55af",
            "b24c8599-a521-4b91-beed-b9ebd9d1c897",
            "bf6f1a11-5a64-4fcd-9f02-480246d91497",
            "d1f5ca69-1796-45f7-a866-bf852076b28b"
          ],
          "failures": [
            "ea23252d-b7eb-48d5-b9cc-90947346fda8",
            "f9effbc1-ec39-4a2e-b7fc-bbd5d6f0ee1f",
            "d657b360-6cf7-460d-a6d1-9527f8d79756"
          ],
          "pending": [],
          "skipped": [],
          "duration": 7804,
          "root": false,
          "rootEmpty": false,
          "_timeout": 0
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 0
    }
  ],
  "meta": {
    "mocha": {
      "version": "11.4.0"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "mochawesome",
        "saveHtml": true,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false,
        "code": true
      },
      "version": "7.1.3"
    },
    "marge": {
      "options": null,
      "version": "6.2.0"
    }
  }
}